<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2008 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:lang="http://www.springframework.org/schema/lang" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/lang http://www.springframework.org/schema/beans/spring-lang-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
  
  <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
  </bean>
  
  <bean id="jacksonJaxbIntrospector" class="org.codehaus.jackson.xc.JaxbAnnotationIntrospector">
  </bean>
  
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="jacksonObjectMapper" />
        <property name="propertyPath" value="serializationConfig"/>
      </bean>
    </property>
    <property name="targetMethod" value="setAnnotationIntrospector"/>
    <property name="arguments">
      <list>
        <ref bean="jacksonJaxbIntrospector" />
      </list>
    </property>
  </bean>
  
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="jacksonObjectMapper" />
        <property name="propertyPath" value="deserializationConfig"/>
      </bean>
    </property>
    <property name="targetMethod" value="setAnnotationIntrospector"/>
    <property name="arguments">
      <list>
        <ref bean="jacksonJaxbIntrospector" />
      </list>
    </property>
  </bean>
  
  <bean id="jaxrsJsonProvider" class="org.codehaus.jackson.jaxrs.JacksonJsonProvider">
    <property name="mapper" ref="jacksonObjectMapper" />
  </bean>
  
  <bean id="cxfJaxrsBus" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.apache.cxf.BusFactory"/>
    <property name="targetMethod" value="getThreadDefaultBus"/>
    <property name="arguments">
      <list>
        <value>true</value>
      </list>
    </property>
  </bean>
  
  <bean id="cxfDestinationFactory" class="org.apache.cxf.transport.servlet.ServletTransportFactory">
    <constructor-arg ref="cxfJaxrsBus" />
  </bean>
  
  <bean id="jaxrsServiceServletConfig" class="org.hippoecm.hst.core.container.ServletDelegatingValve$ServletConfigImpl">
    <constructor-arg value="jaxrsServlet" />
    <constructor-arg>
      <map/>
    </constructor-arg>
  </bean>
  
  <bean id="cxfJaxrsServletController" class="org.apache.cxf.transport.servlet.ServletController">
    <constructor-arg ref="cxfDestinationFactory" />
    <constructor-arg ref="jaxrsServiceServletConfig" />
    <constructor-arg>
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="jaxrsServiceServletConfig" />
        <property name="propertyPath" value="servletContext"/>
      </bean>
    </constructor-arg>
    <constructor-arg ref="cxfJaxrsBus" />
  </bean>
  
  <!-- 
    The internal server factory. 
    Each JAX-RS service component is registered by "resourceProvider" property. 
  -->
  <bean id="cxfJaxrsServerFactoryBean" class="org.apache.cxf.jaxrs.JAXRSServerFactoryBean">
    <property name="address" value="/" />
    <property name="destinationFactory" ref="cxfDestinationFactory" />
    <property name="providers">
      <list>
        <ref bean="jaxrsJsonProvider" />
      </list>
    </property>
    <property name="resourceProviders" ref="jaxrsResourceProviders" />
  </bean>
  
  <bean id="jaxrsResourceProviders" class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg ref="jaxrsCustomerService" />
        </bean>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg ref="jaxrsContentService" />
        </bean>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg ref="jaxrsWorkflowService" />
        </bean>
      </list>
    </property>
  </bean>
  
  <!-- Demo Customer Service -->
  <bean id="jaxrsCustomerService" class="org.hippoecm.hst.services.support.jaxrs.demo.CustomerService">
  </bean>
  
  <!-- Content Service -->
  <bean id="jaxrsContentService" class="org.hippoecm.hst.services.support.jaxrs.content.ContentService">
  </bean>
  
  <!-- Workflow Service -->
  <bean id="jaxrsWorkflowService" class="org.hippoecm.hst.services.support.jaxrs.content.workflow.WorkflowService">
  </bean>
  
  <!-- ========================================================= -->
  <!-- The followings need to be moved to SpringComponentManager-pipelines.xml. -->
  <!-- ========================================================= -->
  
  <!-- Pipelining -->
  
  <bean id="restfulServicesValve" class="org.hippoecm.hst.core.container.JaxrsServiceValve" 
        init-method="initialize" destroy-method="destroy">
    <constructor-arg value="org.apache.cxf.BusFactory" />
    <constructor-arg ref="cxfJaxrsBus" />
    <constructor-arg ref="cxfJaxrsServletController" />
    <constructor-arg ref="cxfJaxrsServerFactoryBean" />
  </bean>
  
  <bean id="siteContentPathResolvingValve" 
        class="org.hippoecm.hst.services.support.jaxrs.container.SiteContentPathResolvingValve">
    <property name="sitesManagers">
      <map>
        <entry key="${preview.servlet.path}/services" value-ref="org.hippoecm.hst.configuration.HstSitesManager.preview" />
        <entry key="${live.servlet.path}/services" value-ref="org.hippoecm.hst.configuration.HstSitesManager.live" />
      </map>
    </property>
  </bean>
  
  <bean id="jaxrsPipeline" class="org.hippoecm.hst.core.container.HstSitePipeline">
    <property name="preInvokingValves">
      <list>
        <ref bean="initializationValve" />
      </list>
    </property>
    <property name="invokingValves">
      <list>
        <ref bean="urlValve" />
        <ref bean="siteResolvingValve" />
        <ref bean="siteContentPathResolvingValve" />
        <ref bean="securityValve" />
        <ref bean="restfulServicesValve" />
      </list>
    </property>
    <property name="postInvokingValves">
      <list>
        <ref bean="cleanupValve" />
      </list>
    </property>
  </bean>
  
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="org.hippoecm.hst.core.container.Pipelines" />
        <property name="propertyPath" value="pipelines"/>
      </bean>
    </property>
    <property name="targetMethod" value="put" />
    <property name="arguments">
      <list>
        <value>JaxrsPipeline</value>
        <ref local="jaxrsPipeline" />
      </list>
    </property>
  </bean>
  
</beans>

