<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  Copyright 2008 Hippo
  
  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.4"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee   http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
  <display-name>Hippo Site Toolkit Container Web Application</display-name> 
  
  <!-- for deploying on Websphere: disable Websphere default portletcontainer -->
  <context-param>
    <param-name>com.ibm.websphere.portletcontainer.PortletDeploymentEnabled</param-name>
    <param-value>false</param-value>
  </context-param>
  
  <!-- Spring Log4j Web Configuration Init Parameters -->
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>

  <context-param>
    <param-name>log4jRefreshInterval</param-name>
    <param-value>60000</param-value>
  </context-param>

  <context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>site.webapp.root</param-value>
  </context-param>

  <!-- Spring Web Application context configuration -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param> 

  <!-- Wicket configuration to run in deployment mode -->
  <context-param>
    <param-name>configuration</param-name>
    <param-value>deployment</param-value>
  </context-param>
  
  <filter>
    <filter-name>WicketContentBrowser</filter-name>
    <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
    <init-param>
      <param-name>applicationClassName</param-name>
      <param-value>org.hippoecm.hst.wicketexamples.WicketContentBrowserApplication</param-value>
    </init-param>
    <init-param>
      <param-name>binary-download-servlet-path</param-name>
      <param-value>/site/binaries</param-value>
    </init-param>
    <init-param>
      <param-name>basePath</param-name>
      <param-value>/</param-value>
    </init-param>
    <init-param>
      <param-name>itemsPerPage</param-name>
      <param-value>10</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>WicketNodePropertiesViewer</filter-name>
    <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
    <init-param>
      <param-name>applicationClassName</param-name>
      <param-value>org.hippoecm.hst.wicketexamples.WicketNodePropertiesViewerApplication</param-value>
    </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>WicketContentBrowser</filter-name>
    <url-pattern>/exapps/contentbrowser/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>WicketNodePropertiesViewer</filter-name>
    <url-pattern>/exapps/nodepropsviewer/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>INCLUDE</dispatcher>
  </filter-mapping>
  
  <!-- Spring Log4j Configuring Listener -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>

  <!-- Bootstrap listener to start up root web application context. -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <servlet>
    <servlet-name>HstContainerServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.container.HstContainerServlet</servlet-class>
    <!--
    HST Application Context Namespace Prefix.
    This should be unique among multiple HST-based application contexts.
    -->
    <!--
    <init-param>
      <param-name>hstContextNamespace</param-name>
      <param-value>news</param-value>
    </init-param>
    -->
    <!--
    HST-2 based SITE application can define and assemble its own components by uncommenting the following two init parameters 
    and set the spring configuration files properly. The spring configuration resources are loaded by the context classloader.
    -->
    <!--
    <init-param>
      <param-name>clientComponentManagerClass</param-name>
      <param-value>org.hippoecm.hst.component.support.ClientComponentManager</param-value>
    </init-param>
    <init-param>
      <param-name>clientComponentManagerConfigurations</param-name>
      <param-value>/META-INF/client-assembly/*.xml</param-value>
    </init-param>
    -->
    <load-on-startup>2</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>BinariesServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.servlet.BinariesServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>StaticResourceServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.servlet.StaticResourceServlet</servlet-class>
  </servlet>
  
  <servlet>
    <servlet-name>HstDispatcherServlet</servlet-name>
    <servlet-class>org.hippoecm.hst.component.support.spring.mvc.HstDispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/applicationContext.xml</param-value>
    </init-param>
    <init-param>
      <param-name>cleanupAfterInclude</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>HstContainerServlet</servlet-name>
    <url-pattern>/preview/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>HstContainerServlet</servlet-name>
    <url-pattern>/live/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>BinariesServlet</servlet-name>
    <url-pattern>/binaries/*</url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>StaticResourceServlet</servlet-name>
    <url-pattern>/staticresource/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>HstDispatcherServlet</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>

  <!-- The Usual Welcome File List -->
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

