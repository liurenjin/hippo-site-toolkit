<!DOCTYPE document PUBLIC "-//Apache Software Foundation//DTD XDOC 1.0//EN"
                          "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
    Copyright 2008 Hippo
    
    Licensed under the Apache License, Version 2.0 (the  "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
    http://www.apache.org/licenses/LICENSE-2.0
    
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  -->
<document>
  <properties>
    <title>ECM Website Development</title>
  </properties>
  <body>
    <section name="The &lt;hst:siteMap&gt; tag">
      <p><b>&lt;hst:siteMap&gt;</b> tag shows a dynamic site map as read from content in the
        repository.</p>

      <p>Following table shows the attributes of the tag. An attribute's value is first found by the
        directly available value, subsequently by a configuration key if present, then by a default
        value. A configuration key is a key in the configuration file normally called
          <code>hst.properties</code>, as given by a web.xml context parameter (<a
          href="../configuration.html">see here</a>).</p>
      <table>
        <tr>
          <th>Attribute</th>
          <th>Required</th>
          <th>ConfigurationKey</th>
          <th>Default</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>context</td>
          <td>no</td>
          <td>sitemaptag.context.name</td>
          <td>context</td>
          <td>Optional name by which the tag gets it's context object from request or page context.</td>
        </tr>
        <tr>
          <td>location</td>
          <td>no</td>
          <td>sitemaptag.location</td>
          <td>/</td>
          <td>The optional location, relative to the context, pointing to the starting location
            where to search for site map items.</td>
        </tr>
        <tr>
          <td>level</td>
          <td>no</td>
          <td>-</td>
          <td>0</td>
          <td>The optional level indicating the starting level from which default output is
            generated. </td>
        </tr>
        <tr>
          <td>depth</td>
          <td>no</td>
          <td>-</td>
          <td>1</td>
          <td>The optional depth indicating, in combination with the level attribute, the end site map
            level for which default output is generated.</td>
        </tr>
        <tr>
          <td>id</td>
          <td>no</td>
          <td>-</td>
          <td>hst-sitemap</td>
          <td>The optional id of this site map that reoccurs as id of the outer div tag
            of the default output. Also used to retrieve an instance based view file.
            Also used as request attribute name for custom output.</td>
        </tr>
      </table>
      <h4>File based configuration</h4>
      <p>Besides the tag attributes, other items can be configured in the configuration file:</p>
      <source><![CDATA[sitemaptag.document.exclude.names
Comma separated list of names of documents that are excluded from the site map. 
Not required, defaults to all documents named 'index'.

sitemaptag.document.label.properties
Comma separated list of properties that are tried to determine site map item  
labels for documents. Not required, by default the document node name is taken. 

sitemaptag.viewfile(.<id>)
Location of a custom jsp file that is used for outputting the site map, 
thereby overriding the default output. The view file may be specified per  
instance with a postfix that is equal to the tag attribute 'id'.    
Not required, no default.]]></source>
      
      <h4>Repository based configuration</h4>
      <p>To indicate on the repository side which folders and documents (nodes) are part of 
        the site map and which are not, a so-called mixin type can be set on a node. 
        The site map's behaviour is as follows:</p>
      <ul>
        <li>Nodes are included in the site map <b>except when</b> the mixin type
          <b>hst:nonSiteMapItem</b> is set on the repository node.</li> 
        <li>Folder subnodes are included <b>except when</b> the mixin type <b>hst:childless</b> 
          is set on the repository node.</li>
      </ul>

      <h4>Repository based labelling</h4>
      <p>The site map item labels are created taking the capitalized name of the node.
        If this is not applicable, it may be specified in an i18n location
        as specified by <code>repository.i18n.location</code>.</p>
      
      <h4>Default HTML output</h4>
      <p>The default site map output is based on a <code>&lt;div&gt;</code> tag 
        with a contained, possibly nested, <code>&lt;ul&gt;</code> / <code>&lt;li&gt; structure</code>. 
        The id of the outer <code>div</code> tag, useful for CSS styling, is the actual  
        attribute 'id' or the default <code>hst-sitemap</code>.</p>
      <p>The default output will create links for each item, based on reversed URL mapping
        functionality, <a href="../url-mapping.html">see here</a>.</p>  

      <h4>Custom HTML output</h4>
      <p>When the configuration item <code>sitemaptag.viewfile</code> is specified, 
        it overrides the default output. Instead, a developer can create it's own
        HTML with a jsp fragment file, using standard Java or jsp expression language
        on an object representing the site map.</p>    
      <p>An org.hippoecm.hst.components.SiteMap object is present in the request under 
        key 'hst-sitemap', which may be overridden by the site map tag attribute 'id'.</p>
       <p>The tag attributes 'level' and 'depth' are present in the request under
        fixed keys prefixed by the id: &lt;id&gt;-level and &lt;id&gt;-depth.</p>    
      <p>The SiteMapItem objects that are retrieved by both the 'documents' and the
        'folders' properties have properties 'label', 'level', 'path' and again 
        'documents' and 'folders'.</p> 
      <p>Note that 'path' can easily be converted to an URL by the &lt;hst:encodeURL&gt; tag.</p>
    </section>
  </body>
</document>
