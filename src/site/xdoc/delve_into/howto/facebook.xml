<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
  Copyright 2008 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
    <properties>
        <title>Create a Facebook</title>
    </properties>
    <body>
        <section name="Create a Facebook">
           <span class='shortdesc'>Learn how to create a new document type, and how to use it in your website,
              by adding a simple facebook to the sample website.</span>

            <p>
                Before starting this tutorial, follow the
                <a href="getting-started-archetype.html">Create a project</a> tutorial to
                get up and running with your HST2 project. Optionally, you can also follow
                the <a href="hello-world.html">Hello World</a> tutorial.
            </p>
            
            <p>
                This tutorial lets you add a simple facebook to your website. You will
                create a custom document type, create and configure new HST2
                <a href="../reference/concepts.html">modules</a>,
                and configure the HST2 <a href="../reference/concepts.html">sitemap</a>.
            </p>
            
            <p>
                <i>
                    Note: in this tutorial we use the
                    <a href="../../run-hippo-ecm/configuration/console.html">console application</a>
                    to manually configure
                    the HST2. The final version of HST2 will provide a plugin for Hippo CMS 7
                    which enables easy configuration through a user friendly GUI.
                </i>
            </p>

            <subsection name="Create a document type">
                <p>
                    For our facebook to be able to list people, we need a document type
                    to describe a person.
                </p>
                <p>
                    Open Hippo CMS in your browser, and sign in. Click on the folder icon
                    to open the browse tab. Click on 'Configuration', and under 'document
                    types' select 'myproject' (or the name of your project, if you used
                    a different name). Select 'Create new type' in the dropdown
                    to create a new document type. A dialog
                    will appear. Give the new document type the name 'person' and click 'OK'.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-create-type.png"><img alt="screenshot" src="../images/tutorials/facebook-create-type-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    Now click on the 'person' document type and click 'Edit'. This will
                    open the document type editor. The template for the new type does not contain any fields
                    yet. Let's add a 'name' field by clicking on 'String'. A String field is
                    added to the template instantly. Click on the field's name (default is
                    'String') to edit the field's properties. Name it 'Name', and fill
                    in 'myproject:name' in the 'path' field. Finally, check the
                    'mandatory' checkbox.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-type-editor.png"><img alt="screenshot" src="../images/tutorials/facebook-type-editor-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    Since this is to be a facebook, let's add the ability to include
                    a picture for each person. Add another field, this time of the type
                    'hippo-resource'. Name it 'Picture', and in the 'path' field, fill
                    in 'myproject:picture'.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-type-editor-2.png"><img alt="screenshot" src="../images/tutorials/facebook-type-editor-2-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    For now a name and picture will do, so click 'Save and close'. To apply
                    the changes you made to your namespace, select 'Update all content' from the dropdown.
                    A dialog will appear warning you about possible consequences. Click 'OK'.
                </p>
            </subsection>
            
            <subsection name="Add people">
                <p>
                    Now that the new 'person' document type is active, click on
                    'Documents' in the 'Folders' column. Add a new folder to store
                    people in by selecting 'New Folder' in the dropdown, and name it 'facebook' in
                    the dialog that appears.
                </p>
                <p>
                    Inside the new 'facebook' folder, add a person document. To do this,
                    select 'New document' in the dropdown. In the dialog that appears, give your
                    person document a name, and select the 'person' type.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-new-person.png"><img alt="screenshot" src="../images/tutorials/facebook-new-person-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    Click 'OK'. The new document will be opened in the document editor.
                    Enter the person's name, and upload a picture.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-edit-person.png"><img alt="screenshot" src="../images/tutorials/facebook-edit-person-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    Go ahead and add some more people. Add your friends, your partner, your kids, your dog,
                    go crazy!
                </p>
            </subsection>
            
            <subsection name="Create a people module">
                <p>
                    Each page in a Hippo Site Toolkit 2 based website is composed
                    of <a href="../reference/concepts.html">modules</a>. A module
                    consists of a JSP file, and a configuration node in the repository.
                    Let's create a module that shows a list of all people. 
                </p>
                <p>
                    In your project, inside <code>myproject/site/src/main/webapp/jsp/modules</code>,
                    create a JSP file <code>people.jsp</code>. The JSP code below iterates over
                    the person documents in location that we will configure in the console.
                </p>
                <p><b>people.jsp:</b></p>
<source>
<![CDATA[
<%@ page contentType="text/html; charset=UTF-8" language="java"%>
<%@ page isELIgnored="false"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/xml" prefix="x"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ page import="org.hippoecm.hst.core.template.*, org.hippoecm.hst.core.template.node.*,javax.jcr.*,java.util.*"%>
<%@ taglib uri="http://www.hippoecm.org/jsp/hst-template" prefix="hst-tmpl"%>

<hst-tmpl:module name="people" var="items"
  className="org.hippoecm.hst.core.template.module.listdisplay.ListDisplayModule"
  execute="false" render="true" />

<c:forEach var="item" items="${items}">
  <hst-tmpl:link var="link" item="${item}" />
  <div>
    <a title="${item.property['myproject:name']}" href="${link.href}">
      <b>${item.property['myproject:name']}</b>
    </a>
  </div>
</c:forEach>
]]>
</source>                
                <p>
                    Open the console in your browser, and sign in. Browse to the
                    <code>/hst:configuration/hst:configuration/hst:modules</code> node.
                    Click on 'Add Node'. In the dialog that appears, give the new
                    node the name 'people', and in the 'Primary Type' field, fill
                    in 'hst:module'.
                </p>
                <p>
                    Now we need to configure the JSP file for this module. Make sure the
                    'people' node you just created is selected, and click on 'Add Property'.
                    Give the new property the name 'hst:template', and the value
                    '/jsp/modules/people.jsp'.
                </p>
                <p>
                    We also need to tell the module the location of our person documents.
                    Add another property to the 'people' node, with the name 'hst:contentlocation'
                    and the value '/content/facebook'.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-people-module.png"><img alt="screenshot" src="../images/tutorials/facebook-people-module-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    To make sure that all changes are persisted, select the root node
                    in the tree, and click on 'Save'. Click 'OK' in the confirmation dialog.
                </p>
            </subsection>

            <subsection name="Configure the sitemap">
                <p>
                    The HST2 <a href="../reference/concepts.html">sitemap</a> is where modules are
                    mapped to URLs. Browse to the
                    <code>/hst:configuration/hst:configuration/hst:sitemap</code> node.
                    Create the following node structure under <code>/hst:configuration/hst:configuration/hst:sitemap</code>
                    (new node names in <b>bold</b>, node types between parentheses):
                </p>
                <ul>
                    <li>
                        <p><i>/hst:configuration/hst:configuration/hst:sitemap</i></p>
                        <ul>
                            <li>
                                <p><b>people</b> (hst:sitemapitem)</p>
                                <ul>
                                    <li>
                                        <p><b>navigation</b> (hst:sitemaplayout)</p>
                                        <ul>
                                            <li>
                                                <p><b>mainnav</b> (hst:sitemapmodule)</p>
                                            </li>
                                        </ul>
                                    </li>
                                    <li>
                                        <p><b>content</b> (hst:sitemaplayout)</p>
                                        <ul>
                                            <li>
                                                <p><b>people</b> (hst:sitemapmodule)</p>
                                            </li>
                                        </ul>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </li>
                </ul>
                <p>
                    Now go ahead and add the following properties with the following values to
                    the <code>/hst:configuration/hst:configuration/hst:sitemap/people</code> node you just created:
                </p>
                <ul>
                    <li>
                        <p><b>hst:urlmapping</b>: /facebook</p>
                    </li>
                    <li>
                        <p><b>hst:pageLayout</b>: hst:layouts/default</p>
                    </li>
                </ul>
                <p>
                    <a href="../images/tutorials/facebook-people-sitemapitem.png"><img alt="screenshot" src="../images/tutorials/facebook-people-sitemapitem-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    Add the following property to <code>/hst:configuration/hst:configuration/hst:sitemap/people/navigation</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:layoutAttribute</b>: nav</p>
                    </li>
                </ul>
                <p>
                    Add the following property to <code>/hst:configuration/hst:configuration/hst:sitemap/people/navigation/mainnav</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:module</b>: hst:modules/mainnav</p>
                    </li>
                </ul>
                <p>
                    Add the following property to <code>/hst:configuration/hst:configuration/hst:sitemap/people/content</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:layoutAttribute</b>: content</p>
                    </li>
                </ul>
                <p>
                    Add the following property to <code>/hst:configuration/hst:configuration/hst:sitemap/people/content/people</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:module</b>: hst:modules/people</p>
                    </li>
                </ul>
                <p>
                    To make sure that all changes are persisted, select the root node
                    in the tree, and click on 'Save'. Click 'OK' in the confirmation dialog.
                </p>

                <p>
                    The list of people should now be available on the website at the
                    URL <code>/preview/facebook</code>. The links won't work yet, but we
                    are going to fix that soon.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-site-people.png"><img alt="screenshot" src="../images/tutorials/facebook-site-people-thumbnail.jpg" width="400" height="310" /></a>
                </p>


            </subsection>

            <subsection name="Create a person module">
                <p>
                    Now that we have the list of people in place, let's implement the person detail
                    pages. We need a module for a person's details.
                    Inside <code>myproject/site/src/main/webapp/jsp/modules</code>, create a JSP file
                    <code>person.jsp</code>. The JSP code below displays the name and picture
                    of a particular person.
                </p>
                <p><b>person.jsp:</b></p>
<source>
<![CDATA[
<%@ page contentType="text/html; charset=UTF-8" language="java" %>
<%@ page isELIgnored="false" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/xml" prefix="x" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@ taglib uri="http://www.hippoecm.org/jsp/hst-template" prefix="hst-tmpl"%>

<hst-tmpl:node var="contentNode"/>

<h1>${contentNode.property['myproject:name'] }</h1>
<p>
  <img src="${contentNode.resourceUrl['myproject:picture']}" alt="picture" />
</p>
]]>
</source>                
                <p>
                    In the console, browse to the
                    <code>/hst:configuration/hst:configuration/hst:modules</code> node.
                    Add a child node named 'person', of type 'hst:module'. Add the
                    property 'hst:template' to the new person node, and give it the
                    value '/jsp/modules/person.jsp'.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-person-module.png"><img alt="screenshot" src="../images/tutorials/facebook-person-module-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    To make sure that all changes are persisted, select the root node
                    in the tree, and click on 'Save'. Click 'OK' in the confirmation dialog.
                </p>
                
            </subsection>
            
            <subsection name="Configure the sitemap">
                <p>
                    Browse to the
                    <code>/hst:configuration/hst:configuration/hst:sitemap</code> node.
                    Create the following node structure under <code>/hst:configuration/hst:configuration/hst:sitemap</code>
                    (new node names in <b>bold</b>, node types between parentheses):
                </p>
                
                <ul>
                    <li>
                        <p><i>/hst:configuration/hst:configuration/hst:sitemap</i></p>
                        <ul>
                            <li>
                                <p><b>person</b> (hst:sitemapitem)</p>
                                <ul>
                                    <li>
                                        <p><b>navigation</b> (hst:sitemaplayout)</p>
                                        <ul>
                                            <li>
                                                <p><b>mainnav</b> (hst:sitemapmodule)</p>
                                            </li>
                                        </ul>
                                    </li>
                                    <li>
                                        <p><b>content</b> (hst:sitemaplayout)</p>
                                        <ul>
                                            <li>
                                                <p><b>person</b> (hst:sitemapmodule)</p>
                                            </li>
                                        </ul>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </li>
                </ul>
                
                <p>
                    Now go ahead and add the following properties with the following values to
                    the <code>/hst:configuration/hst:configuration/hst:sitemap/person</code> node you just created:
                </p>
                <ul>
                    <li>
                        <p><b>hst:nodetype</b>: hippo:document (check the 'Multi value' checkbox)</p>
                    </li>
                    <li>
                        <p><b>hst:prefixlinkrewrite</b>: /facebook</p>
                    </li>
                    <li>
                        <p><b>hst:urlmapping</b>: /facebook/(.*?)$</p>
                    </li>
                    <li>
                        <p><b>hst:nodepath</b>: /content/facebook/* (check the 'Multi value' checkbox)</p>
                    </li>
                    <li>
                        <p><b>hst:pageLayout</b>: hst:layouts/default</p>
                    </li>
                </ul>
                
                <p>
                    <a href="../images/tutorials/facebook-person-sitemapitem.png"><img alt="screenshot" src="../images/tutorials/facebook-person-sitemapitem-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                
                <p>
                    Add the following property to <code>/hst:configuration/hst:configuration/hst:sitemap/person/navigation</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:layoutAttribute</b>: nav</p>
                    </li>
                </ul>
                <p>
                    Add the following properties to <code>/hst:configuration/hst:configuration/hst:sitemap/person/navigation/mainnav</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:module</b>: hst:modules/mainnav</p>
                    </li>
                </ul>
                <p>
                    Add the following property to <code>/hst:configuration/hst:configuration/hst:sitemap/person/content</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:layoutAttribute</b>: content</p>
                    </li>
                </ul>
                <p>
                    Add the following properties to <code>/hst:configuration/hst:configuration/hst:sitemap/person/content/person</code>:
                </p>
                <ul>
                    <li>
                        <p><b>hst:module</b>: hst:modules/person</p>
                    </li>
                </ul>
                <p>
                    To make sure that all changes are persisted, select the root node
                    in the tree, and click on 'Save'. Click 'OK' in the confirmation dialog.
                </p>
                
                
            </subsection>
            
            <subsection name="Browse your facebook!">
                <p>
                    After all this hard work, go and open the website in your browser
                    at the URL <code>/preview/facebook</code>. Now if you click on one of
                    the names, a detail page showing the person's picture should be
                    loaded.
                </p>
                <p>
                    <a href="../images/tutorials/facebook-site-person.png"><img alt="screenshot" src="../images/tutorials/facebook-site-person-thumbnail.jpg" width="400" height="310" /></a>
                </p>
                <p>
                    There you go, you have made your own facebook! You now know how to
                    create a document type, how to create HST2 modules, and how to configure
                    the HST2 sitemap. You can practice a little bit by adding more fields to
                    the document type and displaying them in your website.
                </p>
            </subsection>

        </section>

        <!--
        <section name="Next Step">
            <p>
                TODO
            </p>
        </section>
        -->
    </body>
</document>