/*
 *  Copyright 2009 Hippo.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.hippoecm.hst.tag;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.jstl.fmt.LocaleSupport;

import org.hippoecm.hst.core.component.HstRequest;

/**
 * Surf and edit snippets that prints additional hippo bean information in a comment preceding the link.
 * The markup generated by the link is not guaranteed to be stable.
 */
public class HstEditTag extends HstSurfAndEditTagSupport {

    private static final long serialVersionUID = 1L;

    /* (non-Javadoc)
    * @see javax.servlet.jsp.tagext.TagSupport#doStartTag()
    */
    @Override
    public int doStartTag() throws JspException {
        return EVAL_BODY_INCLUDE;
    }

    @Override
    protected void doRender(final HstRequest hstRequest, final String nodeId, final String surfAndEditLink) throws JspException {
        try {
            JspWriter writer = pageContext.getOut();
            Map<String, String> editParameters = new HashMap<String, String>(2);

            editParameters.put("uuid", nodeId);
            writer.print(createCommentWithAttr(editParameters));

            writer.print("<a href='" + surfAndEditLink + "' class=\"hst-surfandedit\" target=\"CMS\">" + LocaleSupport.getLocalizedMessage(pageContext, "hst.surfandedit.label", "preview-messages") + "</a>");
        } catch (IOException ioe) {
            throw new JspException("Portlet/ResourceURL-Tag Exception: cannot write to the output writer.");
        }
    }

    private String createCommentWithAttr(Map<String, String> attributes) {
        StringBuilder builder = new StringBuilder("<!-- { ");
        boolean first = true;
        for (Map.Entry<String, String> attr : attributes.entrySet()) {
            if (first) {
                first = false;
            } else {
                builder.append(", ");
            }
            builder.append("\"").append(attr.getKey()).append("\":").append("\"").append(attr.getValue()).append("\"");
        }
        builder.append("} -->\n");
        return builder.toString();
    }

}
