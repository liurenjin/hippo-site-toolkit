<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2008 Hippo

  Licensed under the Apache License, Version 2.0 (the  "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS"
  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <bean id="jaxrsBehavioralRestCxfServerFactoryBean" class="org.apache.cxf.jaxrs.JAXRSServerFactoryBean">
    <property name="address" value="/"/>
    <property name="providers">
      <list>
        <ref bean="jaxrsRestJsonProvider"/>
      </list>
    </property>
    <property name="resourceProviders">
      <list>
        <bean class="org.apache.cxf.jaxrs.lifecycle.SingletonResourceProvider">
          <constructor-arg>
            <bean class="org.hippoecm.hst.behavioral.rest.services.HttpSessionResource">
              <property name="httpSessionRegistry" ref="org.hippoecm.hst.behavioral.HttpSessionRegistry"/>
            </bean>
          </constructor-arg>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="jaxrsBehavioralRestService" class="org.hippoecm.hst.jaxrs.cxf.CXFJaxrsService">
    <constructor-arg value="jaxrsBehavioralRestService"/>
    <property name="servletPath" value=""/>
    <property name="jaxrsServerFactoryBean" ref="jaxrsBehavioralRestCxfServerFactoryBean"/>
  </bean>

  <!-- Pipelining -->
  
  <bean id="jaxrsBehavioralRestServiceValve" class="org.hippoecm.hst.core.container.JaxrsRestServiceValve">
    <constructor-arg ref="jaxrsBehavioralRestService"/>
  </bean>

  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject">
      <bean class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
        <property name="targetObject" ref="org.hippoecm.hst.core.container.Pipelines" />
        <property name="propertyPath" value="pipelines"/>
      </bean>
    </property>
    <property name="targetMethod" value="put" />
    <property name="arguments">
      <list>
        <value>BehavioralRestPipeline</value>
        <bean class="org.hippoecm.hst.core.container.HstSitePipeline">
          <property name="initializationValves">
            <list>
              <ref bean="initializationValve" />
              <ref bean="cmsHostContextValve"/>
            </list>
          </property>
          <property name="processingValves">
            <list>
              <ref bean="noCacheResponseHeadersValve" />
              <ref bean="jaxrsBehavioralRestServiceValve" />
            </list>
          </property>
          <property name="cleanupValves">
            <list>
              <ref bean="cleanupValve" />
            </list>
          </property>
        </bean>
      </list>
    </property>
  </bean>
  
  <!-- configure that call to the programmatic creation of the _bt mount for host 127.0.0.1 -->
  <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="org.hippoecm.hst.configuration.model.HstManager"/>
    <property name="targetMethod" value="addHstConfigurationAugmenter"/>
    <property name="arguments">
        <bean class="org.hippoecm.hst.core.hosting.CustomMountAndVirtualHostAugmenter">
           <property name="customMountName" value="_bt"/>
           <property name="customHostName" value="127.0.0.1"/>
           <property name="customMountNamedPipeline" value="BehavioralRestPipeline"/>
           <property name="customMountType" value="live"/>
        </bean>
    </property>
  </bean>
</beans>
