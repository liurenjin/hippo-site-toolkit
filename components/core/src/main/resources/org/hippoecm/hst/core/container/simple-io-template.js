if (typeof Hippo === 'undefined') {Hippo = {};}if (typeof Hippo.Hst === 'undefined') {Hippo.Hst = {};}Hippo.Hst.AsyncPage = {xmlHttpFactories : [function () { return new XMLHttpRequest() },function () { return new ActiveXObject("Msxml2.XMLHTTP") },function () { return new ActiveXObject("Msxml3.XMLHTTP") },function () { return new ActiveXObject("Microsoft.XMLHTTP") }],load : function() {var result = document.getElementsByClassName("_async");for (var i=0, length=result.length; i< length; i++) {(function(element) {this.sendRequest(element.id, function(xmlHttp) {var fragment = document.createDocumentFragment();var tmpDiv = document.createElement('tmpDiv');tmpDiv.innerHTML = xmlHttp.response;while (tmpDiv.firstChild) {fragment.appendChild(tmpDiv.firstChild);}var parent = element.parentNode;parent.replaceChild(fragment, element);});}).call(this, result[i]);}},sendRequest : function(url, callback) {var xmlHttp = this.createXmlHttpObject();if (!xmlHttp) {return;}xmlHttp.open("GET", url, true);xmlHttp.setRequestHeader('User-Agent', 'XMLHTTP/1.0');var self = this;xmlHttp.onreadystatechange = function () {if (xmlHttp.readyState !== 4) {return;}if (xmlHttp.status !== 200 && xmlHttp.status !== 304) {return;}callback.call(self, xmlHttp);};xmlHttp.send();},createXmlHttpObject : function() {var xmlHttp = false;for (var i = 0; i < this.xmlHttpFactories.length; i++) {try {xmlHttp = this.xmlHttpFactories[i]();} catch (e) {continue;}break;}return xmlHttp;}};